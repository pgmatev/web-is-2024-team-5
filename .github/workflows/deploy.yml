name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  ECR_REPOSITORY: ${{ secrets.ECR_REPORITORY }}
  REGION: eu-north-1
  IMAGE_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: ${{ env.REGION }}

    - name: Build and push Docker images
      run: |
        docker-compose -f docker-compose.yml build
        docker tag your-project-server:latest ${{ env.ECR_REPOSITORY }}:server-${{ env.IMAGE_TAG }}
        docker tag your-project-client:latest ${{ env.ECR_REPOSITORY }}:client-${{ env.IMAGE_TAG }}
        docker push ${{ env.ECR_REPOSITORY }}:server-${{ env.IMAGE_TAG }}
        docker push ${{ env.ECR_REPOSITORY }}:client-${{ env.IMAGE_TAG }}

    - name: SSH to EC2 and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          aws ecr get-login-password --region ${{ env.REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPOSITORY }}
          docker pull ${{ env.ECR_REPOSITORY }}:server-${{ env.IMAGE_TAG }}
          docker pull ${{ env.ECR_REPOSITORY }}:client-${{ env.IMAGE_TAG }}
          docker-compose -f /path/to/docker-compose.yml up -d
